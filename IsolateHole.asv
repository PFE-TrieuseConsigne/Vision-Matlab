function [imageOutput,monCentroide] = IsolateHole(image,seuilContrast,centreCercle)
%ISOLATEHOLE Summary of this function goes here
%   Detailed explanation goes here
for i=1:length(image)
F{i} = Gradiant(image{i});
F{i} = imfilter(F{i}, ones(4)/16, 'circular');

%figure(10+i),imshow(F{i},[]);
F{i} = medfilt2(F{i},[6,6]);
F{i} = (F{i} < seuilContrast);
stats = regionprops(F{i}, 'Centroid','pixellist','area');
index = NaN;
%Retient la rÃ©gion qui comprend le centroide
  for i2 = 1: size(stats,1)     
        if (max(ismember(stats(i2).PixelList(:,:),uint16(centreCercle{i}),'row')))
            index = i2;
            break
        end        
  end
 %
F{i}=~F{i};
holePixel(:,1) = uint16(stats(index).PixelList(:,2));
holePixel(:,2) = uint16(stats(index).PixelList(:,1));
pix = sub2ind(size(F{i}), holePixel(:,1), holePixel(:,2));
Filtre = logical(zeros(size(F{i})));
Filtre(pix) = F{i}(pix);

figure(1+i),imshow(F{i},[]);
monCentroide{i} = stats(index).Centroid;
side = 4;
r1 = drawrectangle('Position',[monCentroide{i}(1)-(side/2) ,monCentroide{i}(2)-(side/2) ,side,side],'Color','b');
r2 = drawrectangle('Position',[centreCercle{i}(1)-(side/2) ,centreCercle{i}(2)-(side/2) ,side,side],'Color','b');
end


end

